#!/usr/bin/env python2.7

import socket, struct, sys, telnetlib, binascii

HOST = "127.0.0.1"
PORT = 1337
DEBUG = True

def hexdump(src, length=0x10):
    f=''.join([(len(repr(chr(x)))==3) and chr(x) or '.' for x in range(256)]) ; n=0 ; result=''
    while src:
       s,src = src[:length],src[length:]; hexa = ' '.join(["%02X"%ord(x) for x in s])
       s = s.translate(f) ; result += "%04X   %-*s   %s\\n" % (n, length*3, hexa, s); n+=length
    return result

def xor(data, key):  return ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, itertools.cycle(key)))

def h_s(i): return struct.pack("<I", i)
def h_u(i): return struct.unpack("<I", i)[0]
def i_s(i): return struct.pack("<I", i)
def i_u(i): return struct.unpack("<I", i)[0]
def q_s(i): return struct.pack("<Q", i)
def q_u(i): return struct.unpack("<Q", i)[0]

def err(msg):  print(("[!] %s" % msg))
def ok(msg):   print(("[+] %s" % msg))
def dbg(msg):  print(("[*] %s" % msg))
def xd(msg):   print(("[*] Hexdump:\\n%s" % hexdump(msg)))


def grab_banner(s):
    data = s.read_until("> ")
    dbg("Received %d bytes: %s" % (len(data), data))
    return data

def build_socket(host, port):
    s = telnetlib.Telnet(HOST, PORT)
    ok("Connected to %s:%d" % (host, port))
    return s

 def interact(s):
    try:
        ok("""Get a PTY with ' python -c "import pty;pty.spawn('/bin/bash')"  '""")
        s.interact()
    except KeyboardInterrupt:
        ok("Leaving")
    finally:
        s.close()
    return

def pwn(s):
    #
    # add your l337 stuff here
    #
    return True

if __name__ == "__main__":
    s = build_socket(HOST, PORT)
    banner = grab_banner(s)
    if pwn(s):
        ok("Got it, interacting (Ctrl-C to break)")
        interact(s)
        exit(0)
    else:
        err("Failed to exploit")
        exit(1)
